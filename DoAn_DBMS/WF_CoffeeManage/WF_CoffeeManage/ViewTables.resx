<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>